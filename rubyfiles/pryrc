load "#{ENV['HOME']}/dotfiles/submodules/yadr/irb/pryrc"

# Encoding
Encoding.default_external = "UTF-8"

# Aliases
Pry.commands.alias_command 'w', 'whereami'

# Custom commands
custom_command_set = Pry::CommandSet.new do
  command 'saop', 'save_and_open_page' do |str|
    save_and_open_page
  end
end

Pry.config.commands.import custom_command_set

# Use Hirb {{{
# https://github.com/pry/pry/wiki/FAQ#hirb
begin
  require 'hirb'
rescue LoadError
  puts "gem install hirb  # <-- highly recommended"
end

if defined? Hirb
  # Slightly dirty hack to fully support in-session Hirb.disable/enable toggling
  Hirb::View.instance_eval do
    def enable_output_method
      @output_method = true
      @old_print = Pry.config.print
      Pry.config.print = proc do |output, value|
        Hirb::View.view_or_page_output(value) || @old_print.call(output, value)
      end
    end

    def disable_output_method
      Pry.config.print = @old_print
      @output_method = nil
    end
  end

  Hirb.enable
end
# }}}

# Rails settings
if defined?(Rails)
  # Rspec Console: http://velvetpulse.com/2012/11/19/improve-your-ruby-workflow-by-integrating-vim-tmux-pry/
  if Rails.env.test?
    $LOAD_PATH << 'spec' # in case there are `require 'spec_helper'` statements
    ActiveRecord::Base.logger = Logger.new(nil) # suppress overwhelming information
  end
end

# vim: ft=ruby:fdm=marker
