# TODO: Remove dotfiles/zshfiles.old altogether once the new dotfiles/zshfiles is fully setup
echo "zshrc starting"

zmodload zsh/zprof

# First of all, jump into tmux session automatically {{{
() {
  if [[ -o login ]]; then
    # Likely I don't want to drop into tmux session in login shell. Typically I just do `startx` from login shell.
    # Creating tmux session from login shell could leave a weird shell session (e.g. not having `DISPLAY` env variable)
    return
  fi
  local auto_tmux_session_name="0-default"
  if [ -z $TMUX ]; then
    tmux attach-session -t "$auto_tmux_session_name" 2> /dev/null
    if [ $? -ne 0 ]; then
      tmux new-session -s "$auto_tmux_session_name"
    fi
  fi
}
# }}}

# Disable flow control (ctrl+s, ctrl+q) to enable using these keys in zle/vim/etc.
# https://github.com/tomsquest/dotfiles/blob/master/zsh/bindkey.zsh
stty -ixon -ixoff

if [ -z "$ANYENV_INITIALIZED" ]; then
  # setup anyenv, this is slow, but has to be done only once (anyenv exports its variables)
  path=(
    $HOME/.anyenv/bin
    $path
  )
  eval "$(anyenv init -)"
  export ANYENV_INITIALIZED="yes"
fi
path=(
  $HOME/bin
  $(go env GOPATH)/bin(N/)
  $HOME/.krew/bin(N/)
  $path
)
# export PATH so that subprocesses can use executables installed through anyenv
export PATH

# custom completions are installed in $HOME/completions
fpath+=($HOME/completions)

rcfiles=(
  prompt.zsh
  history.zsh
  zle.zsh
  completion.zsh
  hooks.zsh
  git.zsh
  nvim.zsh
  k8s.zsh
)
for f in $rcfiles
do
  source $HOME/dotfiles/zshfiles/rcfiles/$f
done

# Misc. {{{

# Regard some characters as word stops (better backword-kill-word behavior)
WORDCHARS='*?[]~&;!#$%^(){}<>'

setopt auto_pushd

alias org='tmux rename-window org; ORGMODE=1 emacs -nw ~/org/dashboard.org'

# "j"ump to "d"otfiles
alias jd='cd $HOME/dotfiles'

# expand the command after `sudo` as alias: https://askubuntu.com/questions/22037/aliases-not-available-when-using-sudo
alias sudo='sudo '
# safety net for disaster with `crontab -r`: https://qiita.com/kawaz/items/1620300551b5b3f2eccc#comment-809ad0ec7730802516a9
alias crontab='crontab -i'

function mkcd () {
  mkdir -p "$@" && eval cd "\"\$$#\""
}

alias tf='terraform'

# }}}

# Plugins {{{
eval "$(fasd --init auto)"
eval "$(direnv hook zsh)"

# https://github.com/knqyf263/pet#register-the-previous-command-easily
function pet-prev() {
  PREV=$(fc -lrn | head -n 1)
  pet new "$PREV"
  pet edit
}

# Syntax highlighting from https://github.com/zsh-users/zsh-syntax-highlighting
source $HOME/dotfiles/submodules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Easy history search from https://github.com/zsh-users/zsh-history-substring-search
source $HOME/dotfiles/submodules/zsh-history-substring-search/zsh-history-substring-search.zsh
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# Fish-like auto suggestions from https://github.com/zsh-users/zsh-autosuggestions
source $HOME/dotfiles/submodules/zsh-autosuggestions/zsh-autosuggestions.zsh
# to see all colors: for code in {000..255}; do print -P -- "$code: %F{$code}Test%f"; done
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=241"
# let my custom widgets also clear the autosuggest
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(
  expand-alias-and-accept
)

# More completions from https://github.com/zsh-users/zsh-completions
fpath+=($HOME/dotfiles/submodules/zsh-completions/src)

# cheat: https://github.com/cheat/cheat
export CHEAT_CONFIG_PATH="$HOME/dotfiles/miscfiles/cheat-conf.yaml"
alias c="cheat"
# }}}

# Load local zshrc
[ -f $HOME/.zshrc.local ] && source $HOME/.zshrc.local

autoload -Uz compinit
compinit

# Profile zsh startup time
() {
  local prof_dir="$HOME/.tmp/profiling/zsh"
  rm -f $prof_dir/*
  local prof_file="$prof_dir/`date +%Y-%m-%d_%H:%M:%S`"
  zprof > $prof_file
  cat $prof_file
}

# vim:foldmethod=marker
