(package-initialize)
(require 'package)

(require 'ido)
(ido-mode t)

; Org settings
; ============
(add-to-list 'load-path (expand-file-name "~/dotfiles/submodules/org-mode/lisp"))
(add-to-list 'load-path (expand-file-name "~/dotfiles/submodules/org-mode/contrib/lisp"))
(require 'org)
(require 'org-checklist)

; key settings
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)

; variables
(setq org-directory "~/org")
(setq gtd-inbox (concat org-directory "/inbox.org"))
(setq gtd-next (concat org-directory "/next.org"))
(setq gtd-someday (concat org-directory "/someday.org"))
(setq gtd-project (concat org-directory "/project.org"))

; org settings
(setq org-catch-invisible-edits t)
(setq org-startup-indented t)

(setq org-agenda-files
      (list gtd-inbox gtd-next gtd-someday gtd-project))

; Targets include this file and any file contributing to the agenda - up to 9 levels deep
(setq org-refile-targets (quote ((nil :maxlevel . 9)
                                 (org-agenda-files :maxlevel . 9))))

; org-capture
(setq org-default-notes-file gtd-inbox)
(setq org-capture-templates
      '(("c" "Capture" entry (file gtd-inbox)
         "* TODO %?\n  %U\n  %a")
        ("j" "Journal" entry (file+datetree "~/org/journal.org")
         (file "~/org/templates/journal.txt"))))

; vim: set filetype=lisp:
