snippet header
	#include <algorithm>/*{{{*/
	#include <cassert>
	#include <cctype>
	#include <climits>
	#include <cmath>
	#include <cstdio>
	#include <cstdlib>
	#include <cstring>
	#include <iostream>
	#include <list>
	#include <map>
	#include <numeric>
	#include <queue>
	#include <set>
	#include <sstream>
	#include <stack>
	#include <string>
	#include <vector>

	#define FOR(i, b, e) for (typeof(b) i = (b); assert((i) <= (e)), i != (e); ++i)
	#define SZ(a) ((int)a.size())
	#define PB(e) push_back(e)
	#define SORT(v) sort((v).begin(), (v).end())
	#define RSORT(v) sort((v).rbegin(),(v).rend())
	#define F first
	#define S second
	#define MP(a, b) make_pair(a, b)
	#define BIT(n) (1ULL << (n))

	static const double PI (3.14159265358979323846);
	static const double EPS (1e-10);

	using namespace std;
	typedef long long int LL;
	typedef pair<int,int> P;/*}}}*/
	
	${0}

snippet FOR
abbr FOR(i,0,N)
	FOR(${1:iterator}, ${2:start}, ${3:end(exclusive)}) {
		${4}
	}

snippet FORDEF
abbr FOR definition
	#define FOR(i, b, e) for(typeof(b) i = (b); i != (e); ++i)

snippet dxdy
abbr int dx[] = {...}, dy[] = {...}
	int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};

snippet ICPCmain
	int main(int argc, char const* argv[])
	{
		while (cin >> ${1}, ${2}) {
			FOR(i, 0, ${3}) {
				${0}
			}
		}
		return 0;
	}

snippet GCJmain
	int main(int argc, char const* argv[])
	{
		int T; cin >> T;
		FOR(tt, 0, T) {
			${0}
			printf("Case #%d: ${1}\n", tt + 1, ${2});
		}
		return 0;
	}

