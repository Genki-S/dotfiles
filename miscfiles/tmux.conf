# Reset Prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix # to send C-a to applications within tmux

# Options {{{
# Mouse off
set-window-option -g mode-mouse off
# Set terminal
set-option -g default-terminal "screen-256color"
# Ring the bell if any background window ring a bell
set-option -g bell-action any
# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set-option -g status-keys vi
# Use vi keybindings in copy and choice modes
set-window-option -g mode-keys vi
# Renumber windows
set-option -g renumber-windows on
# For mac pasteboard
set-option -g default-command 'reattach-to-user-namespace-tmux -l "$SHELL"'
# Set that stupid Esc-Wait off (increases vim responsiveness)
set-option -sg  escape-time 0
# Encoding
set-option -g status-utf8 on
set-window-option -g utf8 on
# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
# Bigger history
set-option -g history-limit 10000
# I almost never want to stop at - or _ in words
set-option -g word-separators ' @'
# }}}

# Status line {{{
set-option -g status-interval 30
# http://stackoverflow.com/questions/12003726/give-a-hint-when-press-prefix-key-in-tmux
set-option -g status-left "#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}[#S]"
set-option -g status-left-length 20
# center the window list
set-option -g status-justify centre
# notify window activities
set-option -g visual-activity on
# show hostname, date and time in right status bar
set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M'
# }}}

# Key Bindings {{{
# Global {{{
# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display-message ".tmux.conf reloaded."

# Open new windows/panes with current directory
bind-key c run-shell 'tmux new-window "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key | run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key - run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key v run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'

# Window {{{
bind-key -r C-l select-window -t :+
bind-key -r C-h select-window -t :-

bind-key -r > swap-window -t +1
bind-key -r < swap-window -t -1

bind-key m run-shell '~/dotfiles/bin/tmux-toggle-monitor-silence 5'
# }}}

# Pane {{{
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Pane resize in all four directions using vi bindings.
bind-key -r H resize-pane -L 3
bind-key -r J resize-pane -D 3
bind-key -r K resize-pane -U 3
bind-key -r L resize-pane -R 3
# move current pane to a new window
bind-key T break-pane
# }}}

# Logging
bind-key P pipe-pane -o 'cat >> ~/#S-#I-#P.log' \; display "Toggled logging to ~/#S-#I-#P.log"

# kill pane, window, and session
bind-key x confirm-before kill-pane
bind-key X confirm-before kill-window
bind-key Q confirm-before kill-session
# }}}

# vi-like bindings
unbind [
bind-key Escape copy-mode
unbind p
# paste with 'p' from mac os clipboard
bind-key p run-shell "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\" && tmux paste-buffer"
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy ^V rectangle-toggle
bind-key -t vi-copy V rectangle-toggle
# Use C-g to google selection
# NOTE: don't bind 'G', it breaks tmux-copycat
bind-key -t vi-copy 'C-g' copy-pipe "xargs -I {} open https://www.google.co.jp/search?q=\"{}\""
# bind-key -t vi-copy Escape cancel # this makes tmux-copycat break
bind-key -t vi-edit 'C-p' history-up
bind-key -t vi-edit 'C-n' history-down

# useful bindings for copy mode
# TODO: remove magic string "CURRENT TIME"
bind-key '[' run-shell "tmux copy-mode; tmux send-keys ? CURRENT SPACE TIME ENTER"

# Scripting
# maximize current pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
# minimize
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# }}}

# tmux colors solarized
source $DOTDIR/submodules/tmux-colors-solarized/tmuxcolors-256.conf

# tmux plugins ( https://github.com/tmux-plugins/tpm ) {{{
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins ' \
  tmux-plugins/tpm \
  tmux-plugins/tmux-resurrect \
  tmux-plugins/tmux-copycat \
  tmux-plugins/tmux-open \
  tmux-plugins/tmux-yank \
'

# for vim
set -g @resurrect-strategy-vim 'session'

## tmux-resurrect {{{
set -g @resurrect-processes ' \
  irb \
  pry \
  "~rails server" \
  "~rails console" \
  "zeus start" \
  "foreman start" \
'
## }}}

## tmux-open {{{
set -g @open 'x'
## }}}

## tmux-yank {{{
set -g @copy_mode_put 'C-p'
set -g @copy_mode_yank_put 'C-y'
## }}}

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/dotfiles/submodules/tpm/tpm'
# }}}

# vim: foldmethod=marker:filetype=tmux
